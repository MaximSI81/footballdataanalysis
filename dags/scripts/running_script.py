import sys
sys.path.append('/opt/airflow/dags/scripts')
import asyncio
import argparse
from datetime import datetime
from footbolldataclickhouse import *
from dotenv import load_dotenv  # –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
load_dotenv()

async def main():
    parser = argparse.ArgumentParser(description='Football Data Orchestrator')
    parser.add_argument('--round', type=int, required=True, help='Round number to process')
    parser.add_argument('--tournament', required=True, type=int, help='ID —Ç—É—Ä–Ω–∏—Ä–∞')
    parser.add_argument('--season', required=True, type=int, help='ID —Å–µ–∑–æ–Ω–∞')
    parser.add_argument('--host', default=os.getenv('CLICKHOUSE_HOST', 'localhost'), help='ClickHouse host')
    parser.add_argument('--user', default=os.getenv('CLICKHOUSE_USER', 'default'), help='ClickHouse user')
    parser.add_argument('--password', default=os.getenv('CLICKHOUSE_PASSWORD', ''), help='ClickHouse password')
    parser.add_argument('--database', default=os.getenv('CLICKHOUSE_DB', 'football'), help='ClickHouse database name')
    parser.add_argument('--port', type=int, default=os.getenv('CLICKHOUSE_PORT', 9000), help='ClickHouse port')
    
    args = parser.parse_args()
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—É—Ä–∞ {args.round} –≤ {datetime.now()}")
    print(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {args.host}:{args.port}/{args.database}")
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    orchestrator = FootballDataOrchestrator(
        ch_host=args.host,
        ch_user=args.user,
        ch_password=args.password,
        ch_database=args.database,
        tournament_id=args.tournament,
        season_id=args.season

    )
    
    try:
        await orchestrator.process_round(args.round)
        print(f"‚úÖ –¢—É—Ä {args.round} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—É—Ä–∞ {args.round}: {e}")

if __name__ == "__main__":
    asyncio.run(main())